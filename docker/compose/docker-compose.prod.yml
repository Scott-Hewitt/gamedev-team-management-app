version: '3.8'

services:
  db:
    image: mysql:8.0.36
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: ${DB_NAME:-game_dev_management}
      MYSQL_USER: ${DB_USER:-dbuser}
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=$$(cat /run/secrets/db_root_password)"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    secrets:
      - db_password
      - db_root_password
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  db-setup:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile.backend
    command: npm run setup-db
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-game_dev_management}
      DB_USER: ${DB_USER:-dbuser}
      # Password management options
      FORCE_ADMIN_PASSWORD_RESET: ${FORCE_ADMIN_PASSWORD_RESET:-false}
      CREATE_TEST_USERS: 'false'
    secrets:
      - db_password
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  backend:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile.backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
      db-setup:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-game_dev_management}
      DB_USER: ${DB_USER:-dbuser}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1d}
      # Password management options
      FORCE_ADMIN_PASSWORD_RESET: ${FORCE_ADMIN_PASSWORD_RESET:-false}
      CREATE_TEST_USERS: 'false'
    secrets:
      - db_password
      - jwt_secret
    networks:
      - backend-network
      - frontend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  frontend:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile.frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../ssl:/etc/nginx/ssl:ro
    networks:
      - frontend-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local

secrets:
  db_password:
    file: ../../secrets/db_password.txt
  db_root_password:
    file: ../../secrets/db_root_password.txt
  jwt_secret:
    file: ../../secrets/jwt_secret.txt
