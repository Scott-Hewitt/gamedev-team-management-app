version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
      - backend-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  db-exporter:
    image: prom/mysqld-exporter:latest
    ports:
      - "9104:9104"
    networks:
      - backend-network
      - monitoring-network
    environment:
      - DATA_SOURCE_NAME=root:${MYSQL_ROOT_PASSWORD}@(db:3306)/
    # This service should be used with the main docker-compose file
    # which defines the db service
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    networks:
      - monitoring-network
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ../config/promtail-config.yml:/etc/promtail/config.yml
    networks:
      - monitoring-network
    depends_on:
      - loki
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

networks:
  monitoring-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
