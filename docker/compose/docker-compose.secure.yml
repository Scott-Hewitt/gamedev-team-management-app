services:
  backend:
    image: node:18.19-bullseye-slim # More specific version with smaller attack surface
    # Run as root to avoid permission issues
    working_dir: /app
    command:
      - bash
      - -c
      - "npm install && node server.js"
    restart: always
    depends_on:
      db:
        condition: service_healthy
      db-setup:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-game_dev_management}
      - DB_USER=${DB_USER:-dbuser}
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
      - JWT_SECRET=${JWT_SECRET:-changeme}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
    ports:
      - "5000:5000"
    volumes:
      - .:/app # Writable bind mount for code
      - backend_node_modules:/app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true

  db-setup:
    image: node:18.19-bullseye-slim
    # Run as root for setup to avoid permission issues
    working_dir: /app
    command:
      - bash
      - -c
      - "npm install && sleep 10 && npm run setup-db"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-game_dev_management}
      - DB_USER=${DB_USER:-dbuser}
      - DB_PASSWORD=${DB_PASSWORD:-changeme}
    volumes:
      - .:/app
      - db_setup_node_modules:/app/node_modules
    networks:
      - app-network

  db:
    image: mysql:8.0.36 # Specific version
    restart: always
    environment:
      - MYSQL_DATABASE=${DB_NAME:-game_dev_management}
      - MYSQL_USER=${DB_USER:-dbuser}
      - MYSQL_PASSWORD=${DB_PASSWORD:-changeme}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-changeme}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-changeme}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    ports:
      - "3307:3306" # Expose to host for debugging

  frontend:
    image: node:18.19-bullseye-slim
    # Run as root to avoid permission issues
    working_dir: /app
    command:
      - bash
      - -c
      - "npm install && npm start"
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - HOST=0.0.0.0
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  backend_node_modules:
  db_setup_node_modules:
  frontend_node_modules:
